/**
 * Class de gestion de misso
 */
var Misso = {
	lang: "FR"
};

Misso.stopEvent = function (e) {
	if (!e) {
		if (window.event)
			e = window.event;
		else return;
	}
	if (e.cancelBubble != null)
		e.cancelBubble = true;
	if (e.stopPropagation)
		e.stopPropagation();
	if (e.preventDefault)
		e.preventDefault();
	if (window.event)
		e.returnValue = false;
	if (e.cancel != null)
		e.cancel = true;
};

/**
 * callBack de l'évènement onLoad placer sur le body
 * Charge les modules nécessaier à la page
 */
Misso.init = function () {
	this.makeScrollBar({
		cmpActionWheel: "window",
		CT:"ContentText",
		CmpScroll:"cmpScroll"
	});

	if (MG.$("donnerAvis__cmp") != undefined) {
		this.makeScrollBar({
			cmpActionWheel: "donnerAvis__cmp",
			CT:"donnerAvis__TEXT",
			CmpScroll:"donnerAvis__scroll"
		});
	}

	this.makeScrollBar({
		cmpActionWheel: "window",
		CT:"ContentText",
		CmpScroll:"cmpScroll"
	});

	MG.Events.on("logo_area", "click", function (e) {
		window.location = "index.php";
	});
};

/**
 * Crée une scrollBar en javascript
 */
Misso.makeScrollBar = function (conf) {

	/**
	 * Déplace le contenu à la position correspondant à la scrollBar
	 */
	var moveCT = function () {
		var Pcursor = parseInt(cursor.style["top"]),
			pCtMax = Hct-HcmpCt+3,
			pCt = Math.ceil(((pCtMax / (Hscroll-Hcursor)) * Pcursor) * (-1));
		CT.style["top"] = pCt+"px";
	};

	/**
	 * Déplace le curseur de la scrollbar et la fenêtre concerner
	 */
	var scrollCmpCT = function (direction, ratio) {
		cursorTop = parseInt(cursor.style["top"]);
		var pY = 0,
			ratio = ratio || 5;
		if (direction == "up" && cursorTop > 0) {
			pY = cursorTop-ratio >= 0 ? cursorTop-ratio : 0;
		} else if (direction == "down" && cursorTop <= (Hscroll-Hcursor)) {
			pY = cursorTop+ratio <= (Hscroll-Hcursor) ? cursorTop+ratio : Hscroll-Hcursor;
		}
		cursor.style["top"] = pY+"px";
		moveCT();
	};


	/**
	 * CallBack évènement mouseDown sur le bouton vers haut ou vers bas de la scrollBar
	 * @param event
	 * @param direction (up|down)
	 */
	var intervalScrollMouseDown = false;
	var fn__mouseDownScrollBtn = function (e, direction) {
		MG.Events.on(document, "mouseup", fn__mouseUpScrollBtn);

		intervalScrollMouseDown = setInterval(function () {
			var d = "up";
			if (direction == "down")
				d = "down";
			scrollCmpCT(d);
		}, 50);
	};
	var fn__mouseUpScrollBtn = function (e) {
		clearInterval(intervalScrollMouseDown);
		MG.Events.remove(document, "mouseup", fn__mouseUpScrollBtn);
	};


	/**
	 * CallBack évènement molette souris sur cmpActionWheel
	 * @param event
	 */
	var fn__wheel = function (e) {
		var direction = "up";
		if (e.detail > 0 || e.wheelDelta <= 0)
			direction = "down";
		scrollCmpCT(direction, 15);
		Misso.stopEvent(e);
	};


	/**
	 * CallBack évènement mousemove sur la scrollBar
	 * @param event
	 */
	var lastPos4Drag = false;
	var fn__dragBar = function (e) {
		if (lastPos4Drag == false)
			lastPos4Drag = e.clientY;

		var pY = parseInt(cursor.style["top"])+Math.ceil(e.clientY-lastPos4Drag);
		pY = pY < 0 ? 0 : (pY < Hscroll-Hcursor ? pY : Hscroll-Hcursor);

		//MG.Console.notice(pY);
		cursor.style["top"] = pY+"px";
		moveCT();
		lastPos4Drag = e.clientY;
	};



	var conf = conf || {},
		cmpActionWheel = MG.Typing.isString(conf.cmpActionWheel) ? MG.$(conf.cmpActionWheel) : (MG.Typing.isObject(conf.cmpActionWheel) ? conf.cmpActionWheel : false),
		CT = MG.Typing.isString(conf.CT) ? MG.$(conf.CT) : (MG.Typing.isObject(conf.CT) ? conf.CT : false),
		CmpScroll = MG.Typing.isString(conf.CmpScroll) ? MG.$(conf.CmpScroll) : (MG.Typing.isObject(conf.CmpScroll) ? conf.CmpScroll : false);

	if (CT && CmpScroll) {
		var Hscroll = CmpScroll.offsetHeight-22,
			Hct = CT.offsetHeight,
			HcmpCt = CT.parentNode.offsetHeight,
			Hcursor = Math.ceil(Hscroll / (Hct / HcmpCt));

		if (Hct <= HcmpCt)
			Hcursor = Hscroll;

		var btnUP = MG.Dom.addElement("div", {
			parent: CmpScroll,
			style: {
				height: "11px",
				width: "19px",
				background: "url('images/upScroll.png') no-repeat scroll left top transparent",
				cursor: "pointer",
				"margin-left":"1px"
			}
		});
		var cmpBar = MG.Dom.addElement("div", {
			parent: CmpScroll,
			style: {
				height: Hscroll+"px",
				background: "url('images/barScroll.png') repeat-y scroll left top transparent"
			}
		});

		var cursor = MG.Dom.addElement("div", {
			parent: cmpBar,
			style: {
				position: "relative",
				height: Hcursor+"px",
				width:"9px",
				top:"0px",
				"margin-left":"6px",
				cursor: "pointer",
				"background-color": "#FFFFFF"
			}
		});

		var btnDOWN = MG.Dom.addElement("div", {
			parent: CmpScroll,
			style: {
				height: "11px",
				width: "19px",
				background: "url('images/downScroll.png') no-repeat scroll left top transparent",
				cursor: "pointer",
				"margin-left":"1px"
			}
		});

		if (Hct > HcmpCt) {
			MG.Events.on(cmpActionWheel, "mousewheel", fn__wheel);


			MG.Events.on(btnUP, "mousedown", fn__mouseDownScrollBtn, this, ["up"]);
			MG.Events.on(btnDOWN, "mousedown", fn__mouseDownScrollBtn, this, ["down"]);


			MG.Events.on(cursor, "mousedown", function () {
				MG.Events.on(document, "mousemove", fn__dragBar);
				lastPos4Drag = false;
				if (MG.Browser.isIe()) {
					document.onselectstart = function () { return false; };
				} else {
					document.onmousedown = function () { return false; };
					document.onclick = function () { return true; };
				}
			});
			MG.Events.on(document, "mouseup", function () {
				MG.Events.remove(document, "mousemove", fn__dragBar);
				if (MG.Browser.isIe()) {
					document.onselectstart = function () { return true; };
				} else {
					document.onmousedown = undefined;
					document.onclick = undefined;
				}
			});
		}
	}
};


/**
 * Génère une popUp en y insérant du html
 */
Misso.popText = function (html, conf) {
	var html = html || false,
		conf = conf || {},
		height = conf.height || "530px",
		width = conf.width || "500px",
		noScrollBar = conf.noScrollBar || false,
		body = MG.$$("body")[0];
	if (html) {
		MG.Effect.blurContainer.on(body, {position:"fixed"});
		var BOX = MG.Dom.addElement("div", {
			parent: body,
			cls: "mg__box popText",
			style: {
				"margin-left":(parseInt(width)/2)*-1+"px",
				"margin-top":(parseInt(height)/2)*-1+"px",
				width:width,
				height:height,
				position:"fixed"
			}
		});
		var H = MG.Dom.addElement("div", {parent:BOX, style:{padding:"10px 10px 0px 0px"}});
		var C = MG.Dom.addElement("div", {parent:BOX, style:{height:(parseInt(height)-29)+"px"}});
		var btnClose = MG.Dom.addElement("img", {
			parent: H,
			attrs: {src:"images/btnClose.png", alt:""},
			style: {float:"right", cursor:"pointer"}
		});
		MG.Dom.addElement("div", {parent:H, cls:"mg__clr"});

		var cmpCtn = MG.Dom.addElement("div", {parent:C, cls:"popText_cmpCtn", style:{height:"100%", width:(parseInt(width)-40)+"px"}});
		var ContainerHTML = MG.Dom.addElement("div", {
			parent: cmpCtn,
			cls: "popText__ContainerHTML"
		});
		ContainerHTML.innerHTML = html;

		var fn__close = function (e) {
			MG.Dom.delNode(BOX);
			MG.Effect.blurContainer.off(body);
			MG.Events.remove(btnClose, "click", fn__close);
		};
		MG.Events.on(btnClose, "click", fn__close);

		if (noScrollBar == false) {
			var cmpScroll = MG.Dom.addElement("div", {parent:C, cls:"popText_cmpScroll", style:{height:(parseInt(height)-29-20)+"px"}});

			this.makeScrollBar({
				cmpActionWheel:C,
				CT:ContainerHTML,
				CmpScroll:cmpScroll
			});
		}
	}
};




/**
 * Vérifie que le formulaire de paiement est bien remplis et l'envoi au service de paiement
 */
Misso.checkPayment = function () {
	var form = MG.$("paymentForm"),
		cn = MG.$("paymentForm__cn"),
		cp = MG.$("paymentForm__cp"),
		email = MG.$("paymentForm__email"),
		zip = MG.$("paymentForm__zip"),
		addr = MG.$("paymentForm__addr"),
		cty = MG.$("paymentForm__cty"),
		town = MG.$("paymentForm__town"),
		telno = MG.$("paymentForm__telno"),
		cgv = MG.$("paymentForm__cgv");
	if (form && cn && email) {
		var check = true,
			accents = "àáâãäåçèééêëìíîïðòóôõöùúûüýÿ";

		if (cn.value.search(new RegExp("^([a-z"+accents+"] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(cn, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(cn, "border-color", "#000");

		if (cp.value.search(new RegExp("^([a-z"+accents+"] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(cp, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(cp, "border-color", "#000");

		if (email.value.search(new RegExp("^[a-z]+[a-z0-9_\.-]+@[a-z0-9\.-]+\.[a-z]{2,16}$", 'i')) == -1) {
			MG.Style.setStyle(email, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(email, "border-color", "#000");

		if (zip.value.search(new RegExp("^([0-9] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(zip, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(zip, "border-color", "#000");

		if (addr.value.search(new RegExp("^([a-z0-9"+accents+",-] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(addr, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(addr, "border-color", "#000");

		if (cty.value.search(new RegExp("^([a-z"+accents+"] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(cty, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(cty, "border-color", "#000");

		if (town.value.search(new RegExp("^([a-z0-9"+accents+",-] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(town, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(town, "border-color", "#000");

		if (telno.value.search(new RegExp("^([0-9+] ?)+$", 'i')) == -1) {
			MG.Style.setStyle(telno, "border-color", "#F00");
			check = false;
		} else
			MG.Style.setStyle(telno, "border-color", "#000");

		if (cgv.checked == false) {
			check = false;
			MG.$("paymentForm__cgv_infos").innerHTML = Misso.lang == "FR" ? "<span style='color:#F00'>Vous devez accepter les CGV pour commander.</span>" : "<span style='color:#F00'>You must agree CVG for continue.</span>";
		} else
			MG.$("paymentForm__cgv_infos").innerHTML = "";

		if (check) {
			form.submit();
		}
	}
};




/**
 * Gestions du diaporama de l'index
 * @infos peut être modifier en générique
 * en modifiant un peu avec une fonction de construction imporant le tableau gal et le path et l'id de l'image galerie
 */
Misso.diapoIndex = (function () {
	var gal = [],
		index = 0,
		index2 = gal.length-1,
		path = "images/gallery/",
		intervalOpacity = false,
		intervalReadLoop = false;

	gal[0] = "misso_home_pic1.jpg";
	gal[1] = "misso_home_pic2.jpg";
	gal[2] = "misso_home_pic3.jpg";
	gal[3] = "misso_home_pic4.jpg";
	gal[4] = "misso_home_pic5.jpg";

	var updateImg = function (id, i) {
		MG.$(id).src = path + gal[i];
	};
	var updateImgAndOpacity = function (id, i) {
		MG.Style.setStyle(id, "opacity", "0");
		MG.$(id).src = path + gal[i];
		var op = 0;
		intervalOpacity = setInterval(function () {
			op += 0.05;
			opSTR = op.toString();
			opSTR = opSTR.split(".");
			opSTR = opSTR.length == 2 ? opSTR[0]+"."+opSTR[1].slice(0, 2) : opSTR[0];

			MG.Style.setStyle(id, "opacity", opSTR);
			if (op >= 1)
				clearInterval(intervalOpacity);
		}, 50);
	};

	var next_image = function () {
		clearInterval(intervalOpacity);
		index2 = index;
		index = index+1 == gal.length ? 0 : ++index;
		updateImg("img_gal2", index2);
		updateImgAndOpacity("img_gal", index);
	};

	var prev_image = function () {
		clearInterval(intervalOpacity);
			accents = "àáâãäåçèéêëìíîïðòóôõöùúûüýÿ",
			nom = MG.$("resa-nom"),
			email = MG.$("resa-email"),
			f4InputDate = MG.$("f4InputDate"),
			heure = MG.$("resa-heure"),
			tel = MG.$("resa-tel"),
			trait = MG.$("resa-traitement");

		if (
			nom.value.search(new RegExp("^([a-z"+accents+"] ?)+$", 'i')) == -1
			|| email.value.search(new RegExp("^[a-z]+[a-z0-9_\.-]+@[a-z0-9\.-]+\\\.[a-z]{2,16}$", 'i')) == -1
			|| f4InputDate.value.search(new RegExp("^[0-9]{1,2}\/[0-9]{1,2}\/[0-9]{2,4}$", 'i')) == -1

		)
			check = false;

		if (check) {
				 var xhr_object = null;

			 	   if(window.XMLHttpRequest) // Firefox
			 	      xhr_object = new XMLHttpRequest();
			 	   else if(window.ActiveXObject) // Internet Explorer
			 	      xhr_object = new ActiveXObject("Microsoft.XMLHTTP");
			 	   else { // XMLHttpRequest non supporté par le navigateur
				 	      alert("Votre navigateur ne supporte pas les objets XMLHTTPRequest...");
				 	      return;
				 	   	}

			 	   xhr_object.open("POST", "request.php", true);

			 	   xhr_object.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
			 	   var data = "type=resa&nom="+escape(nom.value)+"&email="+escape(email.value)+"&date="+escape(f4InputDate.value)+"&tel="+escape(tel.value)+"&trait="+escape(trait.value)+"&heure="+escape(heure.value)+"" ;
			 	   xhr_object.send(data);

			 	    	   xhr_object.onreadystatechange = function() {
			 	      		if(xhr_object.readyState == 4)
			 	         	 if(xhr_object.responseText) {
			 	         	 	MG.Style.setStyle("demande", "background", "url('images/formclean.png')");
								MG.Style.hide("resa-cmp_form");
								MG.Style.show("resa-cmp_success");
							 } else {
								MG.Style.setStyle("demande", "background", "url('images/formclean.png')");
				 	         	MG.Style.hide("resa-cmp_form");
								MG.Style.show("resa-cmp_false");

							 }
			 	  			}


					} else {
						MG.Style.setStyle("demande", "background", "url('images/formclean.png')");
						MG.Style.hide("resa-cmp_form");
						MG.Style.show("resa-cmp_badcheck");
					}
	}

	var fn__displayForm = function (e) {
		MG.Style.hide("resa-cmp_badcheck");
		MG.Style.setStyle("demande", "background", "url('images/ground/form.png')");
		MG.Style.show("resa-cmp_form");
	}


	/**
	 * Initialisation
	 * @access PUBLIC
	 */
	var init = function () {
		MG.Events.on("resa-btn", "click", fn__sendForm, Misso.resaMassage);
		MG.Events.on("resa-btnDspForm", "click", fn__displayForm, Misso.resaMassage);
	};

	return {
		init: init
	}
})();






